---
version: 2.1

commands:
  pre:
    steps:
      - run: node --version
      - run: npm --version
      - run: yarn --version
      - checkout

  install-cts:
    steps:
      - run:
          name: Install Pebble Challenge Test Server
          command: /bin/bash ./scripts/test-suite-install-cts.sh
          environment:
            PEBBLECTS_VERSION: 2.3.0

      - run:
          name: Start Pebble Challenge Test Server
          command: /tmp/pebble-challtestsrv -dns01 ":8053" -tlsalpn01 ":5001" -http01 ":5002" -https01 ":5003" -defaultIPv4 "127.0.0.1" -defaultIPv6 ""
          background: true

  install-pebble:
    steps:
      - run:
          name: Install Pebble
          command: /bin/bash ./scripts/test-suite-install-pebble.sh
          environment:
            PEBBLE_VERSION: 2.3.0

      - run:
          name: Start Pebble
          command: /tmp/pebble -strict -config /tmp/pebble.json -dnsserver "127.0.0.1:8053"
          background: true

      - run:
          name: Start Pebble with EAB
          command: /tmp/pebble -strict -config /tmp/pebble-config-external-account-bindings.json -dnsserver "127.0.0.1:8053"
          background: true

      - run:
          name: Set up environment
          command: |
            echo 'export NODE_EXTRA_CA_CERTS="/tmp/ca.cert.pem"' >> $BASH_ENV
            echo 'export ACME_CA_CERT_PATH="/tmp/ca.cert.pem"' >> $BASH_ENV
            echo 'export ACME_DIRECTORY_URL="https://127.0.0.1:14000/dir"' >> $BASH_ENV
            echo 'export ACME_EAB_DIRECTORY_URL="https://127.0.0.1:24000/dir"' >> $BASH_ENV

      - run:
          name: Wait for Pebble
          command: /bin/bash ./scripts/test-suite-wait-for-ca.sh

  install-step:
    steps:
      - run:
          name: Install Step Certificates
          command: /bin/bash ./scripts/test-suite-install-step.sh
          environment:
            STEPCA_VERSION: 0.14.4
            STEPCLI_VERSION: 0.14.4

      - run:
          name: Start Step CA
          command: /usr/bin/step-ca --resolver="127.0.0.1:8053" --password-file="/tmp/password" ~/.step/config/ca.json
          background: true

      - run:
          name: Set up environment
          command: |
            echo 'export NODE_EXTRA_CA_CERTS="/home/circleci/.step/certs/root_ca.crt"' >> $BASH_ENV
            echo 'export ACME_CA_CERT_PATH="/home/circleci/.step/certs/root_ca.crt"' >> $BASH_ENV
            echo 'export ACME_DIRECTORY_URL="https://localhost:8443/acme/acme/directory"' >> $BASH_ENV

            echo 'export ACME_CAP_META_TOS_FIELD=0' >> $BASH_ENV
            echo 'export ACME_CAP_UPDATE_ACCOUNT_KEY=0' >> $BASH_ENV

      - run:
          name: Wait for Step CA
          command: /bin/bash ./scripts/test-suite-wait-for-ca.sh

  test:
    steps:
      - run: yarn
      - run: yarn run lint
      - run: yarn run lint-types
      - run: yarn run build-docs

      - run:
          command: yarn run test
          environment:
            ACME_CHALLTESTSRV_URL: http://127.0.0.1:8055
            ACME_DNS_RESOLVER: 127.0.0.1:8053
            ACME_TLSALPN_PORT: 5001
            ACME_HTTP_PORT: 5002
            ACME_HTTPS_PORT: 5003
            ACME_EAB_TLSALPN_PORT: 25001
            ACME_EAB_HTTP_PORT: 25002
            ACME_EAB_HTTPS_PORT: 25003


jobs:
  v10: { docker: [{ image: circleci/node:10 }], steps: [ pre, install-cts, install-pebble, test ]}
  v12: { docker: [{ image: circleci/node:12 }], steps: [ pre, install-cts, install-pebble, test ]}
  v14: { docker: [{ image: circleci/node:14 }], steps: [ pre, install-cts, install-pebble, test ]}
  # v12-step: { docker: [{ image: circleci/node:12 }], steps: [ pre, install-cts, install-step, test ]}

workflows:
  test-suite:
    jobs:
      - v10
      - v12
      - v14
      # - v12-step
